;;;; system-peep.import.scm - GENERATED BY CHICKEN 4.7.0.3-st -*- Scheme -*-

(eval '(import
         chicken
         scheme
         foreign
         data-structures
         extras
         srfi-69
         srfi-1
         srfi-13
         foreigners
         procter))
(##sys#register-compiled-module
  'system-peep
  (list)
  '((uname . system-peep#uname)
    (utsname-machine . system-peep#utsname-machine)
    (utsname-version . system-peep#utsname-version)
    (utsname-release . system-peep#utsname-release)
    (utsname-nodename . system-peep#utsname-nodename)
    (utsname-sysname . system-peep#utsname-sysname)
    (free-utsname . system-peep#free-utsname)
    (make-utsname . system-peep#make-utsname)
    (fqdn . system-peep#fqdn)
    (hostname . system-peep#hostname)
    (per-cpu-info . system-peep#per-cpu-info)
    (all-cpu-info . system-peep#all-cpu-info)
    (cpu-info . system-peep#cpu-info)
    (column . system-peep#column)
    (partition-at . system-peep#partition-at)
    (proc-v* . system-peep#proc-v*)
    (proc-h* . system-peep#proc-h*)
    (proc* . system-peep#proc*)
    (fact . system-peep#fact)
    (facts . system-peep#facts)
    (register-fact-retriever! . system-peep#register-fact-retriever!)
    (*facts* . system-peep#*facts*))
  (list (cons 'define-fact-retriever/c
              (syntax-rules
                ()
                ((_ (name) body more-body ...)
                 (register-fact-retriever!
                   'name
                   (constantly body more-body ...)))))
        (cons 'define-fact-retriever/m
              (syntax-rules
                ()
                ((_ (name) body more-body ...)
                 (register-fact-retriever!
                   'name
                   (let ((memo 'nil))
                     (lambda ()
                       (when (eq? memo 'nil)
                             (set! memo (begin body more-body ...)))
                       memo))))))
        (cons 'define-fact-retriever
              (syntax-rules
                ()
                ((_ (name) body more-body ...)
                 (register-fact-retriever!
                   'name
                   (lambda () body more-body ...))))))
  (list))

;; END OF FILE
